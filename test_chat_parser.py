#!/usr/bin/env python3
# Boost Software License - Version 1.0 - August 17th, 2003
#
# Permission is hereby granted, free of charge, to any person or organization
# obtaining a copy of the software and accompanying documentation covered by
# this license (the "Software") to use, reproduce, display, distribute,
# execute, and transmit the Software, and to prepare derivative works of the
# Software, and to permit third-parties to whom the Software is furnished to
# do so, all subject to the following:
#
# The copyright notices in the Software and this entire statement, including
# the above license grant, this restriction and the following disclaimer,
# must be included in all copies of the Software, in whole or in part, and
# all derivative works of the Software, unless such copies or derivative
# works are solely in the form of machine-executable object code generated by
# a source language processor.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
# SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
# FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

import unittest
from datetime import datetime

import pytz
from pytz import timezone

from chat_parser import datetime_to_local_iso


class TestChatParser(unittest.TestCase):

    def test_datetime_to_local_iso(self):
        # Make sure daylight savings time works (even without pytz)
        winter = datetime(2016, 1, 27, 16, 0, 0, tzinfo=pytz.utc)
        summer = datetime(2016, 7, 27, 16, 0, 0, tzinfo=pytz.utc)
        tz = timezone("Europe/Vienna")
        winter_local = datetime_to_local_iso(winter, tz)
        summer_local = datetime_to_local_iso(summer, tz)
        self.assertEqual(winter_local, "2016-01-27T17:00:00+01:00")
        self.assertEqual(summer_local, "2016-07-27T18:00:00+02:00")


if __name__ == '__main__':
    unittest.main()
