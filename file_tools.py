# Boost Software License - Version 1.0 - August 17th, 2003
#
# Permission is hereby granted, free of charge, to any person or organization
# obtaining a copy of the software and accompanying documentation covered by
# this license (the "Software") to use, reproduce, display, distribute,
# execute, and transmit the Software, and to prepare derivative works of the
# Software, and to permit third-parties to whom the Software is furnished to
# do so, all subject to the following:
#
# The copyright notices in the Software and this entire statement, including
# the above license grant, this restriction and the following disclaimer,
# must be included in all copies of the Software, in whole or in part, and
# all derivative works of the Software, unless such copies or derivative
# works are solely in the form of machine-executable object code generated by
# a source language processor.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
# SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
# FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

import io
import json
from xml.etree import ElementTree as ET

from burpalyzer_debugging import debug


#
# I/O helper functions for reading/writing UTF-8 data
#


def read_json(filename):
    with io.open(filename, 'r', encoding="utf-8") as json_file:
        return json.load(json_file)


def write_json(filename, data):
    with io.open(filename, 'w', encoding="utf-8") as json_file:
        # Work around a bug in json.dump with python 2:
        # https://stackoverflow.com/a/18337754
        # https://bugs.python.org/issue13769
        json_data = json.dumps(data, ensure_ascii=False)
        json_file.write(unicode(json_data))


def write_lines(filename, lines):
    with io.open(filename, 'w', encoding="utf-8") as output_file:
        for line in lines:
            output_file.write(line)
            output_file.write(u"\n")


def write_html(root, filename):
    tree = ET.ElementTree(root)
    with open(filename, 'wb') as html_file:
        tree.write(html_file, encoding='utf-8', xml_declaration=False)

